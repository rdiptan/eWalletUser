// Mocks generated by Mockito 5.1.0 from annotations
// in e_wallet/test/unit_test/profile_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:e_wallet/http/httpUser.dart' as _i5;
import 'package:e_wallet/model/review.dart' as _i4;
import 'package:e_wallet/model/transactionSummary.dart' as _i3;
import 'package:e_wallet/model/user.dart' as _i7;
import 'package:e_wallet/model/userDetails.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUserDetails_0 extends _i1.Fake implements _i2.UserDetails {}

class _FakeTransactionSummary_1 extends _i1.Fake
    implements _i3.TransactionSummary {}

class _FakeReview_2 extends _i1.Fake implements _i4.Review {}

/// A class which mocks [HttpConnectUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpConnectUser extends _i1.Mock implements _i5.HttpConnectUser {
  MockHttpConnectUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseurl =>
      (super.noSuchMethod(Invocation.getter(#baseurl), returnValue: '')
          as String);
  @override
  set baseurl(String? _baseurl) =>
      super.noSuchMethod(Invocation.setter(#baseurl, _baseurl),
          returnValueForMissingStub: null);
  @override
  _i6.Future<String?> registerUser(_i7.User? user) =>
      (super.noSuchMethod(Invocation.method(#registerUser, [user]),
          returnValue: Future<String?>.value()) as _i6.Future<String?>);
  @override
  _i6.Future<String?> loginUser(String? email, String? password) =>
      (super.noSuchMethod(Invocation.method(#loginUser, [email, password]),
          returnValue: Future<String?>.value()) as _i6.Future<String?>);
  @override
  void assignToken(dynamic token) =>
      super.noSuchMethod(Invocation.method(#assignToken, [token]),
          returnValueForMissingStub: null);
  @override
  _i6.Future<_i2.UserDetails> getUser() =>
      (super.noSuchMethod(Invocation.method(#getUser, []),
              returnValue: Future<_i2.UserDetails>.value(_FakeUserDetails_0()))
          as _i6.Future<_i2.UserDetails>);
  @override
  _i6.Future<String?> updateKYC(_i2.UserDetails? userdetails) =>
      (super.noSuchMethod(Invocation.method(#updateKYC, [userdetails]),
          returnValue: Future<String?>.value()) as _i6.Future<String?>);
  @override
  _i6.Future<_i3.TransactionSummary> getTransactionSummary() =>
      (super.noSuchMethod(Invocation.method(#getTransactionSummary, []),
              returnValue: Future<_i3.TransactionSummary>.value(
                  _FakeTransactionSummary_1()))
          as _i6.Future<_i3.TransactionSummary>);
  @override
  _i6.Future<_i4.Review> getReview() =>
      (super.noSuchMethod(Invocation.method(#getReview, []),
              returnValue: Future<_i4.Review>.value(_FakeReview_2()))
          as _i6.Future<_i4.Review>);
  @override
  _i6.Future<String?> newReview(String? newcomment, double? newrating) => (super
      .noSuchMethod(Invocation.method(#newReview, [newcomment, newrating]),
          returnValue: Future<String?>.value()) as _i6.Future<String?>);
  @override
  _i6.Future<String?> updateReview(String? newcomment, double? newrating) =>
      (super.noSuchMethod(
          Invocation.method(#updateReview, [newcomment, newrating]),
          returnValue: Future<String?>.value()) as _i6.Future<String?>);
  @override
  _i6.Future<String?> deleteReview() =>
      (super.noSuchMethod(Invocation.method(#deleteReview, []),
          returnValue: Future<String?>.value()) as _i6.Future<String?>);
  @override
  _i6.Future<String?> changePassword(
          String? old_password, String? new_password) =>
      (super.noSuchMethod(
          Invocation.method(#changePassword, [old_password, new_password]),
          returnValue: Future<String?>.value()) as _i6.Future<String?>);
}
